%YAML 1.2
---

# http://www.sublimetext.com/docs/3/syntax.html

# TODO: Jai's tags to be scoped as meta.annotation. I believe they begin with @.
# TODO: Bitwise operators

name: Jai
file_extensions:
  - jai
scope: source.jai

contexts:
  main:
    - match: '\b\w+\s*(?=:\s*[:=]\s*\([^)]*?\)\s*(?:{|->))'
      scope: entity.name.function.jai
      push: function-def
    - include: common
    - match: '\b\w+(?=\s*:\s*[:=]\s*struct)'
      scope: entity.name.type.struct.jai
    - match: '{'
      push: block
  
  block:
    - include: common
    - match: '{'
      push: block
    - match: '}'
      pop: true

  common:
    - include: multiline-comment
    - match: //
      push:
        - meta_scope: comment.line.jai
        - match: $
          pop: true
    - match: '(#)(\w+?)\b'
      captures:
        1: punctuation.preprocessor.jai, meta.preprocessor.jai
        2: meta.preprocessor.jai
    - match: '"'
      push: string-literal
    - match: '\b\w+(?=\()'
      scope: variable.function.jai
    - match: '(?<!\w)-?(?:\d|_)+(?:\.(?:\d|_)+)?'
      scope: constant.numeric.jai
    - match: '\b(?:null|true|false)\b'
      scope: constant.language.jai
    - match: '\b(?:return|if|then|else|for|break|continue|it|it_index|struct|using)\b'
      scope: keyword.jai
    - include: storage-type
    - match: ';'
      scope: punctuation.terminator.jai
    - match: '(?<=\w)\.(?=[[[:alpha:]]_])'
      scope: punctuation.accessor.jai
    - match: '\['
      scope: punctuation.section.brackets.begin.jai
    - match: '\]'
      scope: punctuation.section.parens.end.jai
    - match: '>>|<<|[&|]'
      scope: keyword.operator.bitwise.jai
    - match: '[><!]|=='
      scope: keyword.operator.logical.jai
    - match: '[+*/-]'
      scope: keyword.operator.arithmetic.jai
    - match: '\s*:[=:]'
      scope: keyword.operator.assignment.jai
    - match: '(?<=\w)\s*:(?=.*?[:=])'
      scope: keyword.operator.assignment.jai
    - match: ':(?=.+?;)'
      scope: keyword.operator.assignment.jai
    - match: '='
      scope: keyword.operator.assignment.jai
  
  string-literal:
    - meta_scope: string.quoted.double.jai
    - match: '\\.'
      scope: constant.character.escape.jai
    - match: '%'
      scope: constant.other.placeholder.jai
    - match: '"'
      pop: true
    
  multiline-comment:
    - match: /\*
      push:
        - include: multiline-comment
        - meta_scope: comment.block.jai
        - match: \*/
          pop: true
  
  storage-type:
    - match: '\b(?:Any|void|string|bool|float|float32|float64|int|u8|u16|u32|u64|s8|s16|s32|s64)\b'
      scope: storage.type.jai
  
  function-def:
    - meta_scope: meta.function.jai
    - match: '::|:='
      scope: keyword.operator.assignment.jai
    - include: storage-type
    - match: '->'
      scope: keyword.other.jai
    - match: '(?=\s*{)'
      pop: true
    








